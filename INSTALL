#!/bin/bash

# This is the installer for Wren, a super simple, open source blogging
# platform written in bash. In leau of a package manager this installer
# script will check dependencies are installed and then install Wren.

# Copyright (C) 2014
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License (version 3+) as
# published by the Free Software Foundation. You should have received
# a copy of the GNU General Public License along with this program.
# If not, see <http://www.gnu.org/licenses/>.

function gerror() {
    echo -e "$1"
    sleep 3
    exit 1
}

# Installation Method
echo -e \
    "The following installation methods are available.\n"
    "\r  1.  As a stand-alone website\n"
    "\r  2.  Alongside an existing website\n"
    "\r  3.  Using GitHub pages and git\n"
    "\r  4.  Using GitHub pages (web-only)"
while true; do
    read -p "\nWhich installation method do you want to use? " answer
    case $answer in
        [1]* ) mode="alone"; break;;
        [2]* ) mode="along"; break;;
        [3]* ) mode="ghgit"; break;;
        [4]* ) mode="ghweb"; break;;
        * ) echo "Please choose an option from above (1-4)";;
    esac
done

# GitHub Web Type
if [ "$mode" == "ghweb" ]; then
    echo -e \
        "This method is designed for web use only and so\n"
        "\rdoesn't require any instance. Go to the wiki\n"
        "\rfor more information on this method.\n"
    gerror
fi

# Dependencies
depends=(wget tar date wc)
for package in "${depends[@]}"; do
    if ! type "$package" >> "/dev/null 2>&1"; then
        gerror "Using wren requires '$package' to be installed"
    fi
done
if [ "$type" == "ghgit" ]; then
    if ! type "git" >> "/dev/null 2>&1"; then
        echo -e \
            "This method requires 'git' to be installed. If\n"
            "\ryou wish to use GitHub pages without git please\n"
            "\ruse the web-only option. Otherwise, install it\n"
            "\rand rerun this script."
        gerror
    fi
fi


# GitHub Git Type
# ---------------

if [ "$type" == "ghgit" ]; then
    while true; do
        # Asks for username
        read -p "What is your GitHub username? " answer
        if [ -z "$answer"] || wget "https://github.com/$answer" >/dev/null 2>&1 
        then
            echo "GitHub user does not exist!"
        else
            break
        fi
    done

    # GitHub Username
    ghuser="$answer"
    ghpage="$ghuser.github.io"

    # Cloning repo
    git clone "https://github.com/$ghuser/$ghpage.git" || error="True"
    if [ "$error" == True ]; then
        gerror "An error occured! Check above for more info"
    else
        cd "$ghpage"
    fi

    # Checking repo
    if [ -d ".wren" ]; then
        : #pass
    else
        cd ../ && rm -r "$ghpage"
        gerror "The repo does not appear to be a fork of the Wren repo"
    fi
fi


# Website type
# ------------

# Gets web root
if [ "$type" == "alone" ] || [ "$type" == "along" ]; then
    echo -e \
        "Please enter the root location for your website\n" 
        "\rdirectory (can either be absolute or relative).\n"
        "\rThe path default is taken as '/var/www/html/'."
    while read inputline; do
        rootdir="$inputline"
        if [ -z "${what}" ]; then
            if [ -d "/var/www/html" ]; then
                echo "Default accepted."
            else
                mkdir /var/www/html/
                echo "Created default directory"
            fi
        else
            if [ -d "$rootdir" ]; then
                echo -e "Using $rootdir"
            else
                gerror "The directory you entered doesn't seem to exist" 
            fi
        fi
    done

    # Checks write permissions
    if [ -w "$rootdir" ]; then 
        : # pass
    else
        echo -e \
            "You do not have write permissions for the\n"
            "\rdirectory you entered. This could be because\n"
            "\rit requires root permissions so try running\n"
            "\rthis script as root when trying again."
        gerror
    fi    

    # Moved to rootdir
    cd "$rootdir"    

    # Downloads latest Wren release
    wget "https://github.com/wren-blog/wren/archive/v$version.tar.gz"
    tar xf "v$version.tar.gz"
    rm "v$version.tar.gz"

    # Moves files into root
    mv "wren-$version/*" .
    rm -r "wren-$version"

    # DOOES REST OF STUFF
    fi
fi
